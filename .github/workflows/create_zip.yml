name: Create Kodi Plugin Zip (On Push or Daily Check)

on:
  push:
    branches:
      - main # Or your main development branch
  schedule:
    # Run every night at 02:00 AM UTC (07:30 AM IST)
    - cron: '0 2 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Addon ID
        id: get_addon_id
        run: |
          # Extract addon ID from addon.xml (still necessary for zip naming)
          ADDON_ID=$(grep -oP 'id="\K[^"]+' addon.xml)
          echo "Addon ID: $ADDON_ID"
          echo "ADDON_ID=$ADDON_ID" >> $GITHUB_OUTPUT
        working-directory: ./ # Correct, as addon.xml is in root

      - name: Determine Addon Version (from addon.xml or Push Ref)
        id: get_addon_version
        run: |
          ADDON_VERSION=""
          # For nightly runs or direct pushes to main, use version from addon.xml
          ADDON_VERSION=$(grep -oP 'version="\K[^"]+' addon.xml)
          echo "Addon Version (from addon.xml): $ADDON_VERSION"
          echo "ADDON_VERSION=$ADDON_VERSION" >> $GITHUB_OUTPUT
        working-directory: ./ # Correct, as addon.xml is in root

      - name: Create Plugin Zip
        run: |
          ADDON_ID="${{ steps.get_addon_id.outputs.ADDON_ID }}"
          ADDON_VERSION="${{ steps.get_addon_version.outputs.ADDON_VERSION }}"
          ZIP_FILENAME="$ADDON_ID-$ADDON_VERSION.zip" # Define zip filename here

          # Create a temporary directory to build the zip from
          TEMP_DIR="./$ADDON_ID"
          mkdir -p "$TEMP_DIR"

          # Copy all plugin files into the temporary directory
          # Exclude .git and .github folders, and any existing zip files
          rsync -av --exclude '.git/' --exclude '.github/' --exclude '*.zip' . "$TEMP_DIR"

          # Zip the plugin, ensuring the addon ID is the root folder inside the zip
          zip -r "$ZIP_FILENAME" "$TEMP_DIR"

          # Move the created zip to the repository root for artifact upload
          mv "$ZIP_FILENAME" ./

          # Clean up the temporary directory
          rm -rf "$TEMP_DIR"
        working-directory: ./ # This ensures the zip is created in the repo root

      - name: Upload Plugin Zip as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_addon_id.outputs.ADDON_ID }}-${{ steps.get_addon_version.outputs.ADDON_VERSION }}-build
          path: ${{ steps.get_addon_id.outputs.ADDON_ID }}-${{ steps.get_addon_version.outputs.ADDON_VERSION }}.zip
          # Optionally, set a retention-days for how long the artifact should be kept
          # retention-days: 7 # Keep artifact for 7 days
